import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from wordcloud import WordCloud
import re

# Load the dataset
df = pd.read_csv("Entity_Sentiment.csv")

# Display basic info
print("Dataset loaded successfully.")
print("Sample rows:\n", df.head())
print("Columns:\n", df.columns)

# Clean the text column for word cloud
def clean_text(text):
    text = re.sub(r"http\S+", "", text)     # remove URLs
    text = re.sub(r"@\w+", "", text)        # remove mentions
    text = re.sub(r"#\w+", "", text)        # remove hashtags
    text = re.sub(r"[^a-zA-Z\s]", "", text) # keep only letters
    text = text.lower()
    return text

df["cleaned_content"] = df["content"].astype(str).apply(clean_text)

# Plot 1: Overall Sentiment Distribution
plt.figure(figsize=(6, 4))
sns.countplot(data=df, x='sentiment', palette="Set2")
plt.title("Overall Sentiment Distribution")
plt.xlabel("Sentiment")
plt.ylabel("Tweet Count")
plt.tight_layout()
plt.show()

# Plot 2: Top 10 Most Mentioned Entities
top_entities = df['entity'].value_counts().head(10)
plt.figure(figsize=(8, 5))
sns.barplot(x=top_entities.values, y=top_entities.index, palette="Blues_d")
plt.title("Top 10 Most Mentioned Entities")
plt.xlabel("Tweet Count")
plt.ylabel("Entity")
plt.tight_layout()
plt.show()

# Plot 3: Sentiment Distribution per Top Entity
top_entity_list = top_entities.index.tolist()
filtered_df = df[df['entity'].isin(top_entity_list)]

plt.figure(figsize=(12, 6))
sns.countplot(data=filtered_df, x='entity', hue='sentiment', palette="coolwarm")
plt.title("Sentiment Distribution for Top 10 Entities")
plt.xlabel("Entity")
plt.ylabel("Tweet Count")
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

# Word Cloud - Positive Sentiment
positive_text = " ".join(df[df["sentiment"] == "Positive"]["cleaned_content"])
wordcloud_pos = WordCloud(width=800, height=400, background_color="white").generate(positive_text)

plt.figure(figsize=(10, 5))
plt.imshow(wordcloud_pos, interpolation='bilinear')
plt.axis("off")
plt.title("Word Cloud - Positive Tweets")
plt.tight_layout()
plt.show()

# Word Cloud - Negative Sentiment
negative_text = " ".join(df[df["sentiment"] == "Negative"]["cleaned_content"])
wordcloud_neg = WordCloud(width=800, height=400, background_color="black", colormap='Reds').generate(negative_text)

plt.figure(figsize=(10, 5))
plt.imshow(wordcloud_neg, interpolation='bilinear')
plt.axis("off")
plt.title("Word Cloud - Negative Tweets")
plt.tight_layout()
plt.show()
